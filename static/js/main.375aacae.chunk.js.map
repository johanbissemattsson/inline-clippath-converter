{"version":3,"sources":["App.js","registerServiceWorker.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","width","height","input","output","decimals","_handleWidthChange","event","setState","target","value","_handleHeightChange","_handleDecimalsChange","_handlePathDataChange","_tabs","size","tabs","i","_filterClipPaths","children","filter","childItem","React","isValidElement","type","_filterDefs","_convertPath","SvgPath","iterate","segment","length","inputX","inputY","outputX","outputY","round","toString","_convertData","inputWidth","inputHeight","inputDecimals","Math","min","max","Number","startsWith","ReactHtmlParser","map","item","svgWidth","svgHeight","defs","clippaths","clippathItem","paths","clippathItemChild","id","pathItem","d","join","_onOutputClick","document","getElementById","select","execCommand","react_default","a","createElement","appStyle","formStyle","inputContainerStyle","inputStyle","headerStyle","onChange","placeholder","outputContainerStyle","outputStyle","onClick","readOnly","Component","css","global","background","margin","padding","label","fontFamily","display","flexDirection","minHeight","fontSize","@media (min-width: 640px)","flex","& label","fontWeight","& input","boxSizing","& textarea","& small","opacity","alignItems","maxWidth","marginBottom","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","src_App","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.375aacae.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { css } from 'glamor'\r\nimport SvgPath from 'svgpath'\r\nimport ReactHtmlParser from 'react-html-parser';\r\nimport { filter } from 'lodash'\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      width: '1440',\r\n      height: '900',\r\n      input: '',\r\n      output: '',\r\n      decimals: 4,\r\n    };\r\n\r\n    const min = 1;\r\n    const max = 9999;\r\n    const tabSpaces = '  ';\r\n\r\n    this._handleWidthChange = (event) => {\r\n      this.setState({width: event.target.value});\r\n    }\r\n\r\n    this._handleHeightChange = (event) => {\r\n      this.setState({height: event.target.value});\r\n    }\r\n    \r\n    this._handleDecimalsChange = (event) => {\r\n      let value = event.target.value;\r\n      if (value > 9) {\r\n        value = 9;\r\n      }\r\n      this.setState({decimals: value});\r\n    }\r\n    \r\n    this._handlePathDataChange = (event) => {\r\n      this.setState({input: event.target.value});\r\n    }\r\n\r\n    this._tabs = (size) => {\r\n      let tabs = '';\r\n      let i = 0;\r\n      for (i = 0; i < size; i++) { \r\n        tabs += tabSpaces;\r\n      } \r\n      return tabs;\r\n    }\r\n\r\n    this._filterClipPaths = (children) => filter(children, ((childItem) => {\r\n      return (React.isValidElement(childItem) && childItem.type === 'clippath')\r\n    }));\r\n\r\n    this._filterDefs = (children) => filter(children, ((childItem) => {\r\n      return (React.isValidElement(childItem) && childItem.type === 'defs')\r\n    }));\r\n\r\n    this._convertPath = (input, width, height, decimals) => {\r\n      const convertedPath = SvgPath(input).iterate((segment) => {\r\n      for (let i = 1; i < segment.length; i+=2) {\r\n        const inputX = segment[i];\r\n        const inputY = segment[i+1];\r\n        const outputX = inputX / width;\r\n        const outputY = inputY / height;\r\n        segment[i] = outputX;\r\n        segment[i+1] = outputY;\r\n      }\r\n    }).round(decimals).toString()\r\n    return convertedPath;\r\n  };\r\n    \r\n    this._convertData = (input, inputWidth, inputHeight, inputDecimals) => {\r\n      const width = Math.min(Math.max(Number(inputWidth), min), max);\r\n      const height = Math.min(Math.max(Number(inputHeight), min), max);\r\n      const decimals = Math.min(Math.max(Number(inputDecimals), 2), max);\r\n\r\n      if (this.state.input.startsWith('<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->')) {\r\n        return ReactHtmlParser(this.state.input).map((item) => {\r\n          if (React.isValidElement(item) && item.type === 'svg') {\r\n            const svgWidth = item.props.width;\r\n            const svgHeight = item.props.height;\r\n            const defs = this._filterDefs(item.props.children);\r\n            if (defs.length !== 0 && defs[0].props && defs[0].props.children.length !== 0) {\r\n              const clippaths = this._filterClipPaths(defs[0].props.children);\r\n              if (clippaths.length !== 0) {\r\n                return (\r\n                  '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1 1\">\\n' + \r\n                  this._tabs(1) + '<defs>\\n' +\r\n                    clippaths.map((clippathItem) => {\r\n                      const paths = filter(clippathItem.props.children, ((clippathItemChild) => {\r\n                        return (React.isValidElement(clippathItemChild) && clippathItemChild.type === 'path')\r\n                      }));\r\n                      return (\r\n                      this._tabs(2) + '<clipPath id=\"' + clippathItem.props.id + '\" clipPathUnits=\"objectBoundingBox\">\\n' +\r\n                        paths.map((pathItem ) => this._tabs(3) + '<path d=\"' + this._convertPath(pathItem.props.d, svgWidth ? svgWidth : width, svgHeight ? svgHeight : height, decimals) + '\"/>\\n') +\r\n                      this._tabs(2) + '</clipPath>\\n'\r\n                      )}).join('') + \r\n                  this._tabs(1) + '</defs>\\n' +\r\n                  '</svg>\\n'\r\n                );\r\n              }\r\n            }\r\n          }\r\n        return ('')}).join('');\r\n      } else {\r\n          const output = this._convertPath(input, width, height, decimals)\r\n          if (output !== '') {\r\n            return output;\r\n          } else {\r\n            return 'No valid input data!'\r\n          }\r\n        }\r\n      }\r\n    \r\n\r\n    this._onOutputClick = (event) => {\r\n      document.getElementById('output').select();\r\n      document.execCommand(\"copy\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div {...appStyle}>\r\n        <form {...formStyle}>\r\n          <div {...inputContainerStyle}>\r\n            <div {...inputStyle}>\r\n            <header {...headerStyle}>\r\n              <h1>Inline Clippath Converter</h1>\r\n              <p>Converts SVG path data to range between 0 – 1.</p>\r\n            </header>\r\n              <label>Input width:</label>\r\n              <input type='number' value={this.state.width} onChange={this._handleWidthChange} />\r\n              <small>(skipped if copied SVG already has width and height attributes)</small>\r\n              <label>Input height:</label>\r\n              <input type='number' value={this.state.height} onChange={this._handleHeightChange} />        \r\n              <small>(skipped if copied SVG already has width and height attributes)</small>\r\n              <label>Input SVG path data:</label>\r\n              <textarea onChange={this._handlePathDataChange} value={this.state.input} placeholder='m333 123 314.123 101...'></textarea>\r\n            </div>\r\n          </div>\r\n          <div {...outputContainerStyle}>\r\n            <div {...outputStyle}>\r\n              <label>Output decimals:</label>\r\n              <input type='number' max='9' min='2' value={this.state.decimals} onChange={this._handleDecimalsChange}/>\r\n              <label>Converted SVG path data (click to copy):</label>\r\n              <textarea id='output' onClick={this._onOutputClick} readOnly='readonly' value={this._convertData(this.state.input, this.state.width, this.state.height, this.state.decimals)}></textarea>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\ncss.global(\r\n  'body', {\r\n    background: '#ebebeb',\r\n    margin: 0,\r\n    padding: 0\r\n  },\r\n  \r\n)\r\n\r\nlet appStyle = css({\r\n  label: 'app',\r\n  fontFamily: 'monospace',\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  minHeight: '100vh',\r\n})\r\n\r\nlet headerStyle = css({\r\n  label: 'header',\r\n  fontSize: '0.75em',\r\n  '@media (min-width: 640px)': {\r\n    fontSize: '1em'\r\n  }\r\n})\r\n\r\nlet formStyle = css({\r\n  label: 'form',\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  flex: 1,\r\n  '& label': {\r\n    label: 'label',\r\n    display: 'block',\r\n    margin: '1em 0 0.5em 0',\r\n    fontWeight: 'bold'\r\n  },\r\n  '& input': {\r\n    label: 'input',\r\n    width: '100%',\r\n    boxSizing: 'border-box',\r\n    fontSize: '1.25em',\r\n  },\r\n  '& textarea': {\r\n    label: 'textarea',\r\n    width: '100%',\r\n    minHeight: '8em',\r\n    boxSizing: 'border-box',\r\n  },\r\n  '& small': {\r\n    label: 'small',\r\n    opacity: 0.33\r\n  }\r\n});\r\n\r\nlet inputContainerStyle = css({\r\n  label: 'inputContainer',\r\n  padding: '0 5%',\r\n  width: '100%',\r\n  boxSizing: 'border-box',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  minHeight: '50vh'\r\n});\r\n\r\nlet outputContainerStyle = css({\r\n  label: 'outputContainer',\r\n  padding: '0 5%',\r\n  background: '#ebffeb',\r\n  width: '100%',\r\n  boxSizing: 'border-box',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  flex: 1,\r\n  minHeight: '50vh'\r\n});\r\n\r\nlet inputStyle = css({\r\n  maxWidth: '960px',\r\n  margin: '0 auto',\r\n  marginBottom: '2em',\r\n  flex: 1\r\n});\r\n\r\nlet outputStyle = css({\r\n  maxWidth: '960px',\r\n  margin: '2em auto 6em auto',\r\n  flex: 1\r\n});\r\n\r\n/*\r\n<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"clippath\" viewBox=\"0 0 1 1\">\r\n  <defs>\r\n    <clipPath id=\"clippath-konstfack\">\r\n      <path d=\"M10,30 A20,20,0,0,1,50,30 A20,20,0,0,1,90,30 Q90,60,50,90 Q10,60,10,30 Z\"/>\r\n    </clipPath>\r\n  </defs>\r\n</svg>\r\n*/","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}